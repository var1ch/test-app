{"version":3,"sources":["state/products/slice.ts","state/comments/slice.ts","state/store.ts","state/products/selectors.ts","state/comments/selectors.ts","view/StyledAppContainer.tsx","view/pages/ListPage/ProductsList/components/ModalItem.tsx","view/pages/ListPage/ProductsList/components/ProductItem.tsx","view/pages/ListPage/ProductsList/ProductsList.tsx","view/pages/ListPage/StylesListPage.tsx","view/pages/ListPage/ListPage.tsx","view/pages/DetailsPage/components/Comment.tsx","view/pages/DetailsPage/components/EditProductModal/StyledEditProductModal.ts","view/pages/DetailsPage/components/EditProductModal/EditProductModal.tsx","view/pages/DetailsPage/StyledDetailsPage.tsx","view/pages/DetailsPage/DetailsPage.tsx","view/App.tsx","serviceWorker.ts","index.tsx","state/index.ts"],"names":["productsAdapter","createEntityAdapter","selectId","product","id","productsSlice","createSlice","name","initialState","getInitialState","reducers","addProductAction","state","action","addOne","payload","deleteProductAction","removeOne","setSelectedProductAction","updateOne","changes","isSelected","changeProductAction","count","size","width","height","weight","actions","commentsAdapter","comment","commentsSlice","addCommentAction","deleteCommentAction","rootReducer","combineReducers","comments","commentsReducer","products","productsReducer","store","configureStore","reducer","productsSelectors","getSelectors","selectedProductSelector","createSelector","selectAll","find","e","allProductsSelector","commentsSelectors","allCommentsSelector","StyledAppContainer","styled","div","StyledModal","ModalUnstyled","Backdrop","style","backgroundColor","border","p","px","pb","ModalItem","props","open","openModal","onClose","aria-labelledby","aria-describedby","BackdropComponent","Box","sx","children","ProductItem","imgUrl","productName","productDescription","productCount","useState","setOpenModal","dispatch","useDispatch","onCloseHandler","className","src","alt","to","onClick","ProductsList","productsArray","map","item","imageUrl","StyledListPage","ListPage","useSelector","sortType","setSortType","number","setNumber","onDeclineHandler","sort","a","b","fetch","then","res","json","prev","image","title","Comment","text","StyledDetailsPage","DetailsPage","selectedProduct","commentText","setCommentText","data","setData","browserHistory","useHistory","onChangeInModalHandler","value","backListener","listen","useEffect","filter","productId","description","type","placeholder","onChange","target","Math","random","date","Date","getTime","toString","htmlFor","autoComplete","alert","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f191f643.chunk.js","sourcesContent":["import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type {\r\n  Product,\r\n  ChangeStatusPayload,\r\n  ChangeProductPayload,\r\n} from \"./types\";\r\n\r\nexport const productsAdapter = createEntityAdapter<Product>({\r\n  selectId: (product) => product.id,\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: productsAdapter.getInitialState(),\r\n  reducers: {\r\n    addProductAction: (state, action: PayloadAction<Product>) => {\r\n      productsAdapter.addOne(state, action.payload);\r\n    },\r\n    deleteProductAction: (state, action: PayloadAction<number>) => {\r\n      productsAdapter.removeOne(state, action.payload);\r\n    },\r\n    setSelectedProductAction: (\r\n      state,\r\n      action: PayloadAction<ChangeStatusPayload>,\r\n    ) => {\r\n      productsAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          isSelected: action.payload.changes,\r\n        },\r\n      });\r\n    },\r\n    changeProductAction: (\r\n      state,\r\n      action: PayloadAction<ChangeProductPayload>,\r\n    ) => {\r\n      productsAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          count: +action.payload.count,\r\n          size: {\r\n            width: +action.payload.width,\r\n            height: +action.payload.height,\r\n          },\r\n          weight: `${action.payload.weight}g`,\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addProductAction,\r\n  deleteProductAction,\r\n  setSelectedProductAction,\r\n  changeProductAction,\r\n} = productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CommentType } from \"./types\";\r\n\r\nexport const commentsAdapter = createEntityAdapter<CommentType>({\r\n  selectId: (comment) => comment.id,\r\n});\r\n\r\nconst commentsSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState: commentsAdapter.getInitialState(),\r\n  reducers: {\r\n    addCommentAction: (state, action: PayloadAction<CommentType>) => {\r\n      commentsAdapter.addOne(state, action.payload);\r\n    },\r\n    deleteCommentAction: (state, action: PayloadAction<number>) => {\r\n      commentsAdapter.removeOne(state, action.payload);\r\n    },\r\n    // editCommentAction: (state, action: PayloadAction<CommentChanges>) => {\r\n    //   commentsAdapter.updateOne(state, {\r\n    //     id: action.payload.id,\r\n    //     changes: {\r\n    //       description: action.payload.text,\r\n    //     },\r\n    //   });\r\n    // },\r\n  },\r\n});\r\n\r\nexport const { addCommentAction, deleteCommentAction } = commentsSlice.actions;\r\n\r\nexport default commentsSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport commentsReducer from \"./comments/slice\";\r\nimport productsReducer from \"./products/slice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  comments: commentsReducer,\r\n  products: productsReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","import { createSelector } from \"reselect\";\r\nimport { productsAdapter } from \"./slice\";\r\nimport type { RootState } from \"../store\";\r\n\r\nconst productsSelectors = productsAdapter.getSelectors(\r\n  (state: RootState) => state.products,\r\n);\r\n\r\nexport const selectedProductSelector = createSelector(\r\n  productsSelectors.selectAll,\r\n  (products) => products.find((e) => e.isSelected === true),\r\n);\r\n\r\nexport const allProductsSelector = createSelector(\r\n  productsSelectors.selectAll,\r\n  (products) => products,\r\n);\r\n","import { createSelector } from \"reselect\";\r\nimport { commentsAdapter } from \"./slice\";\r\nimport type { RootState } from \"../store\";\r\n\r\nconst commentsSelectors = commentsAdapter.getSelectors(\r\n  (state: RootState) => state.comments,\r\n);\r\n\r\nexport const allCommentsSelector = createSelector(\r\n  [commentsSelectors.selectAll],\r\n  (comments) => comments,\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledAppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 720px;\r\n  margin: 0 auto;\r\n  a {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n  h1.title {\r\n    margin-bottom: 25px;\r\n    font-size: 2rem;\r\n  }\r\n  hr {\r\n    margin-bottom: 25px;\r\n  }\r\n  .regularButton {\r\n    padding: 10px;\r\n    background-color: #3d3da5;\r\n    font-weight: bold;\r\n    color: white;\r\n    outline: none;\r\n    border: none;\r\n    border-radius: 4px;\r\n    box-shadow: 0px 0px 10px 2px;\r\n    display: inline-block;\r\n    font-size: 1.1rem;\r\n    height: 100%;\r\n    display: inline-block;\r\n    vertical-align: top;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: blue;\r\n    }\r\n  }\r\n  button {\r\n    padding: 1em;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledAppContainer;\r\n","import React from \"react\";\r\nimport { styled, Box } from \"@mui/system\";\r\nimport ModalUnstyled from \"@mui/core/ModalUnstyled\";\r\n\r\nconst StyledModal = styled(ModalUnstyled)`\r\n  position: fixed;\r\n  z-index: 1300;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  .modalTitle {\r\n    font-weight: bold;\r\n    font-size: 1.3rem;\r\n  }\r\n  .modalButton {\r\n    margin-top: 10px;\r\n    padding: 5px;\r\n    border: 1px solid black;\r\n    margin-right: 10px;\r\n    font-size: 1.3rem;\r\n    color: black;\r\n    border-radius: 4px;\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: blue;\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Backdrop = styled(\"div\")`\r\n  z-index: -1;\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  -webkit-tap-highlight-color: transparent;\r\n`;\r\n\r\nconst style = {\r\n  width: 400,\r\n  backgroundColor: \"white\",\r\n  border: \"2px solid #000\",\r\n  p: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n  openModal: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport default function ModalItem(props: Props) {\r\n  return (\r\n    <StyledModal\r\n      open={props.openModal}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      BackdropComponent={Backdrop}\r\n    >\r\n      <Box sx={style}>{props.children}</Box>\r\n    </StyledModal>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteProductAction } from \"../../../../../state\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setSelectedProductAction } from \"../../../../../state\";\r\nimport ModalItem from \"./ModalItem\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  imgUrl: string;\r\n  productName: string;\r\n  productDescription: string;\r\n  productCount: string;\r\n}\r\n\r\nexport default function ProductItem({\r\n  id,\r\n  imgUrl,\r\n  productName,\r\n  productDescription,\r\n  productCount,\r\n}: Props) {\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onCloseHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onConfirmHandler = () => {\r\n    dispatch(deleteProductAction(id));\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <li className=\"listItem\">\r\n      <div className=\"product\">\r\n        <img src={imgUrl} alt=\"product\" />\r\n        <span className=\"productName\">{productName}</span>\r\n        <br />\r\n        <p className=\"productDescription\">{productDescription}</p>\r\n        <span className=\"productCount\">{productCount}</span>\r\n      </div>\r\n      <div className={\"buttonsBlock\"}>\r\n        <Link\r\n          className=\"regularButton productButton\"\r\n          to={`/products/${id}`}\r\n          onClick={() =>\r\n            dispatch(setSelectedProductAction({ id, changes: true }))\r\n          }\r\n        >\r\n          Product Details\r\n        </Link>\r\n        {/* <button>Edit</button> */}\r\n        <button\r\n          className=\"regularButton productButton\"\r\n          onClick={() => setOpenModal(true)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n      <ModalItem onClose={onCloseHandler} openModal={openModal}>\r\n        <>\r\n          <span className=\"modalTitle\">Delete Product?</span> <br />\r\n          <button className=\"modalButton\" onClick={onConfirmHandler}>\r\n            Delete\r\n          </button>\r\n          <button className=\"modalButton\" onClick={onCloseHandler}>\r\n            Cancel\r\n          </button>\r\n        </>\r\n      </ModalItem>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ProductItem from \"./components/ProductItem\";\r\nimport type { Product } from \"../../../../state\";\r\n\r\ninterface Props {\r\n  productsArray: Product[];\r\n}\r\n\r\nexport default function ProductsList(props: Props) {\r\n  return (\r\n    <ul className=\"productsList\">\r\n      {props.productsArray.map((item: any) => (\r\n        <ProductItem\r\n          key={item.id}\r\n          id={item.id}\r\n          imgUrl={item.imageUrl}\r\n          productName={item.name}\r\n          productDescription={`Size: Width: ${item.size.width} Height: ${item.size.height}`}\r\n          productCount={`Count: ${item.count}`}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledListPage = styled.div`\r\n  button.regularButton {\r\n    margin-right: 10px;\r\n  }\r\n  .productButton {\r\n    font-size: 1rem;\r\n    margin-right: 10px;\r\n    margin-top: 10px;\r\n  }\r\n  ul.productsList {\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-top: 25px;\r\n    li.listItem {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin-bottom: 25px;\r\n      background-color: white;\r\n      border-radius: 3px;\r\n      padding: 1em;\r\n      box-shadow: 1px 1px 8px 1px rgba(0, 0, 0, 0.25);\r\n      span.productName {\r\n        font-weight: bold;\r\n      }\r\n      img {\r\n        float: left;\r\n        margin-right: 16px;\r\n        width: 150px;\r\n      }\r\n      &:last-child {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n  button.addProduct {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProductsList from \"./ProductsList/ProductsList\";\r\nimport { addProductAction, allProductsSelector } from \"../../../state\";\r\nimport ModalItem from \"./ProductsList/components/ModalItem\";\r\nimport { StyledListPage } from \"./StylesListPage\";\r\n\r\nexport default function ListPage() {\r\n  const products = useSelector(allProductsSelector);\r\n  const [sortType, setSortType] = useState(\"\");\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [number, setNumber] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeclineHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n  const onConfirmHandler = () => {\r\n    fetch(`https://fakestoreapi.com/products/${number}`)\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setNumber((prev) => prev + 1);\r\n        dispatch(\r\n          addProductAction({\r\n            id: json.id,\r\n            isSelected: false,\r\n            imageUrl: json.image,\r\n            name: json.title,\r\n            count: 2 + number,\r\n            size: {\r\n              width: 3 + number,\r\n              height: 3 + number,\r\n            },\r\n            weight: \"300g\",\r\n          }),\r\n        );\r\n        setOpenModal(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <StyledListPage>\r\n      <h1 className=\"title\">Products List</h1>\r\n      <button className=\"regularButton\">Sort by Name</button>\r\n      <button\r\n        className=\"regularButton\"\r\n        onClick={() => setSortType(sortType === \"\" ? \"byCount\" : \"\")}\r\n      >\r\n        Sort by Count\r\n      </button>\r\n      <div className=\"productsBlock\">\r\n        <ProductsList\r\n          productsArray={\r\n            sortType === \"byCount\"\r\n              ? products.sort((a, b) => b.count - a.count)\r\n              : products.sort((a, b) => a.count - b.count)\r\n          }\r\n        />\r\n        <hr />\r\n        <button className=\"regularButton\" onClick={() => setOpenModal(true)}>\r\n          New Product\r\n        </button>\r\n        <ModalItem openModal={openModal} onClose={onDeclineHandler}>\r\n          <>\r\n            <span className=\"modalTitle\">Add Product?</span> <br />\r\n            <button className=\"modalButton\" onClick={onConfirmHandler}>\r\n              Add\r\n            </button>\r\n            <button className=\"modalButton\" onClick={onDeclineHandler}>\r\n              Cancel\r\n            </button>\r\n          </>\r\n        </ModalItem>\r\n      </div>\r\n    </StyledListPage>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteCommentAction } from \"../../../../state\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  id: number;\r\n}\r\n\r\nexport default function Comment({ text, id }: Props) {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"comment\">\r\n        <span className=\"commentText\">{text}</span>\r\n        <AiFillDelete\r\n          className=\"deleteButton\"\r\n          size={35}\r\n          onClick={() => dispatch(deleteCommentAction(id))}\r\n        />\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n","import { styled } from \"@mui/system\";\r\nimport ModalUnstyled from \"@mui/core/ModalUnstyled\";\r\n\r\nexport const StyledModal = styled(ModalUnstyled)`\r\n  position: fixed;\r\n  z-index: 1300;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  input {\r\n    border: 1px solid grey;\r\n  }\r\n  form {\r\n    .submitButton {\r\n      margin-right: 10px;\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Backdrop = styled(\"div\")`\r\n  z-index: -1;\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  -webkit-tap-highlight-color: transparent;\r\n`;\r\n\r\nexport const style = {\r\n  width: 400,\r\n  backgroundColor: \"white\",\r\n  border: \"2px solid #000\",\r\n  p: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport { StyledModal, style, Backdrop } from \"./StyledEditProductModal\";\r\n\r\ninterface Props {\r\n  openModal: boolean;\r\n  onClose: () => void;\r\n  children: JSX.Element;\r\n}\r\n\r\nexport default function ModalItem(props: Props) {\r\n  return (\r\n    <StyledModal\r\n      open={props.openModal}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      BackdropComponent={Backdrop}\r\n    >\r\n      <Box sx={style}>{props.children}</Box>\r\n    </StyledModal>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledDetailsPage = styled.div`\r\n  img {\r\n    width: 380px;\r\n  }\r\n  span.description {\r\n    display: block;\r\n  }\r\n  .backButton {\r\n    display: inline-block;\r\n  }\r\n  h1 {\r\n    display: inline-block;\r\n    margin-left: 25px;\r\n  }\r\n  .productName {\r\n    font-weight: bold;\r\n  }\r\n  div.header {\r\n  }\r\n  button.editButton {\r\n    margin-bottom: 25px;\r\n  }\r\n  div.addCommentsField {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: 25px;\r\n    input {\r\n      flex: 1;\r\n      margin-right: 10px;\r\n      padding: 8px;\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n  span.commentText {\r\n    vertical-align: top;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1.2rem;\r\n    overflow: hidden;\r\n  }\r\n  .deleteButton {\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .comment {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 500px;\r\n    margin-bottom: 16px;\r\n    background-color: white;\r\n    border-radius: 4px;\r\n    padding: 10px;\r\n  }\r\n  .commentsBlock {\r\n    width: 500px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  addCommentAction,\r\n  allCommentsSelector,\r\n  selectedProductSelector,\r\n  setSelectedProductAction,\r\n  CommentType,\r\n  changeProductAction,\r\n} from \"../../../state\";\r\nimport Comment from \"./components/Comment\";\r\nimport EditProductModal from \"./components/EditProductModal/EditProductModal\";\r\nimport { StyledDetailsPage } from \"./StyledDetailsPage\";\r\n\r\nexport default function DetailsPage() {\r\n  const comments = useSelector(allCommentsSelector);\r\n  const selectedProduct = useSelector(selectedProductSelector);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [commentText, setCommentText] = useState(\"\");\r\n  const [data, setData] = useState({\r\n    count: \"\",\r\n    width: \"\",\r\n    height: \"\",\r\n    weight: \"\",\r\n  });\r\n  const browserHistory = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeInModalHandler = (value: string, id: string) => {\r\n    switch (id) {\r\n      case \"count\":\r\n        setData({\r\n          ...data,\r\n          count: value,\r\n        });\r\n        break;\r\n      case \"width\":\r\n        setData({\r\n          ...data,\r\n          width: value,\r\n        });\r\n        break;\r\n      case \"height\":\r\n        setData({\r\n          ...data,\r\n          height: value,\r\n        });\r\n        break;\r\n      case \"weight\":\r\n        setData({\r\n          ...data,\r\n          weight: value,\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  const onCloseHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const backListener = browserHistory.listen(() => {\r\n    if (browserHistory.action === \"POP\") {\r\n      dispatch(\r\n        setSelectedProductAction({\r\n          id: selectedProduct?.id ? selectedProduct.id : 0,\r\n          changes: false,\r\n        }),\r\n      );\r\n    }\r\n  });\r\n  const onChangeHandler = (e: any) => {\r\n    setCommentText(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    return backListener();\r\n  });\r\n  return (\r\n    <StyledDetailsPage>\r\n      <div className=\"header\">\r\n        <Link\r\n          className=\"regularButton backButton\"\r\n          to=\"/\"\r\n          onClick={() =>\r\n            dispatch(\r\n              setSelectedProductAction({\r\n                id: selectedProduct?.id ? selectedProduct.id : 0,\r\n                changes: false,\r\n              }),\r\n            )\r\n          }\r\n        >\r\n          Back\r\n        </Link>\r\n        <h1 className=\"title\">Details Page</h1>\r\n      </div>\r\n      <button\r\n        className=\"regularButton editButton\"\r\n        onClick={() => setOpenModal(true)}\r\n      >\r\n        Edit\r\n      </button>\r\n      <br />\r\n      <span className={\"productName\"}>{selectedProduct?.name}</span>\r\n      <br />\r\n      <img src={selectedProduct?.imageUrl} alt=\"\" />\r\n      <br />\r\n      <span className=\"description\">Count: {selectedProduct?.count}</span>\r\n      <span className=\"description\">\r\n        Sizes: Width: {selectedProduct?.size.width} Height:{\" \"}\r\n        {selectedProduct?.size.height}\r\n      </span>\r\n      <span className=\"description\">Weight: {selectedProduct?.weight}</span>\r\n      <br />\r\n      <div className=\"commentsBlock\">\r\n        <ul className=\"commentsList\">\r\n          {comments\r\n            .filter((e) => e.productId === selectedProduct?.id)\r\n            .map((item: CommentType) => (\r\n              <Comment key={item.id} id={item.id} text={item.description} />\r\n            ))}\r\n        </ul>\r\n        <div className=\"addCommentsField\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Write Your Comment Here\"\r\n            value={commentText}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <button\r\n            className=\"regularButton\"\r\n            onClick={() => {\r\n              setCommentText(\"\");\r\n              dispatch(\r\n                addCommentAction({\r\n                  id: Math.random(),\r\n                  productId: selectedProduct?.id ? selectedProduct.id : 0,\r\n                  description: commentText,\r\n                  date: new Date().getTime().toString(),\r\n                }),\r\n              );\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <EditProductModal openModal={openModal} onClose={onCloseHandler}>\r\n        <>\r\n          <h2>Edit</h2>\r\n          <form action=\"\">\r\n            <label htmlFor=\"count\">Count: </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              id=\"count\"\r\n              type=\"number\"\r\n              value={data.count}\r\n              onChange={(e) =>\r\n                onChangeInModalHandler(e.target.value, e.target.id)\r\n              }\r\n            />\r\n            <br />\r\n            <label htmlFor=\"count\">Width: </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              id=\"width\"\r\n              type=\"number\"\r\n              value={data.width}\r\n              onChange={(e) =>\r\n                onChangeInModalHandler(e.target.value, e.target.id)\r\n              }\r\n            />\r\n            <br />\r\n            <label htmlFor=\"count\">Height: </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              id=\"height\"\r\n              type=\"number\"\r\n              value={data.height}\r\n              onChange={(e) =>\r\n                onChangeInModalHandler(e.target.value, e.target.id)\r\n              }\r\n            />\r\n            <br />\r\n            <label htmlFor=\"count\">Weight: </label>\r\n            <input\r\n              autoComplete=\"off\"\r\n              id=\"weight\"\r\n              type=\"number\"\r\n              value={data.weight}\r\n              onChange={(e) =>\r\n                onChangeInModalHandler(e.target.value, e.target.id)\r\n              }\r\n            />\r\n            <br />\r\n            <input\r\n              className=\"submitButton\"\r\n              type=\"button\"\r\n              value=\"Submit\"\r\n              onClick={() => {\r\n                if (\r\n                  data.count === \"\" ||\r\n                  data.height === \"\" ||\r\n                  data.width === \"\" ||\r\n                  data.weight === \"\"\r\n                ) {\r\n                  alert(\r\n                    \"You have empty input fields. Please fill them before submit\",\r\n                  );\r\n                }\r\n                setOpenModal(false);\r\n                setData({\r\n                  count: \"\",\r\n                  width: \"\",\r\n                  height: \"\",\r\n                  weight: \"\",\r\n                });\r\n                dispatch(\r\n                  changeProductAction({\r\n                    id: selectedProduct?.id ? selectedProduct?.id : 0,\r\n                    count: `${data.weight ? data.weight : \"\"}`,\r\n                    width: `${data.width ? data.width : \"\"}`,\r\n                    height: `${data.height ? data.height : \"\"}`,\r\n                    weight: `${data.weight ? data.weight : \"\"}`,\r\n                  }),\r\n                );\r\n              }}\r\n            />\r\n            <input className=\"cancelButton\" type=\"button\" value=\"Cancel\" />\r\n          </form>\r\n        </>\r\n      </EditProductModal>\r\n    </StyledDetailsPage>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport StyledAppContainer from \"./StyledAppContainer\";\r\nimport ListPage from \"./pages/ListPage/ListPage\";\r\nimport DetailsPage from \"./pages/DetailsPage/DetailsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <StyledAppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ListPage}></Route>\r\n          <Route path=\"/products/:productId\">\r\n            <DetailsPage />\r\n          </Route>\r\n        </Switch>\r\n      </StyledAppContainer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./view/App\";\r\nimport { store } from \"./state/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export * from \"./products/selectors\";\r\nexport * from \"./products/types\";\r\nexport * from \"./products/slice\";\r\nexport * from \"./comments/selectors\";\r\nexport * from \"./comments/types\";\r\nexport * from \"./comments/slice\";\r\nexport * from \"./store\";\r\n"],"sourceRoot":""}