{"version":3,"sources":["state/index.ts","state/products/slice.ts","state/products/selectors.ts","view/StyledAppContainer.tsx","view/ProductsList/components/StyledProductItem.tsx","view/components/ModalItem.tsx","view/ProductsList/components/ProductItem.tsx","view/ProductsList/StyledProductsList.tsx","view/ProductsList/ProductsList.tsx","view/pages/ListPage/ListPage.tsx","view/pages/DetailsPage/DetailsPage.tsx","view/App.tsx","state/comments/slice.ts","state/store.ts","serviceWorker.ts","index.tsx"],"names":["productsAdapter","createEntityAdapter","selectId","product","id","productsSlice","createSlice","name","initialState","getInitialState","reducers","addProductAction","state","action","addOne","payload","deleteProductAction","removeOne","setSelectedProduct","updateOne","changes","isSelected","actions","productsSelectors","getSelectors","products","selectedProductSelector","selectById","createSelector","selectAll","find","e","allProductsSelector","StyledAppContainer","styled","div","StyledProductItem","li","StyledModal","ModalUnstyled","Backdrop","style","width","backgroundColor","border","p","px","pb","ModalItem","props","open","openModal","onClose","aria-labelledby","aria-describedby","BackdropComponent","Box","sx","title","text","onClick","onConfirm","ProductItem","imgUrl","productName","productDescription","productCount","dispatch","useDispatch","useState","setOpenModal","className","src","alt","to","StyledProductsList","ul","ProductsList","arr","map","item","imageUrl","size","height","count","StyledListPage","ListPage","useSelector","number","setNumber","fetch","then","res","json","prev","image","weight","StyledDetailsPage","DetailsPage","browserHistory","useHistory","backListener","listen","loc","selectedProduct","useEffect","App","exact","path","component","commentsAdapter","comment","commentsSlice","addCommentAction","deleteCommentAction","editCommentAction","description","rootReducer","combineReducers","comments","commentsReducer","productsReducer","store","configureStore","reducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2GAAA,ylB,gCCAA,oJAIaA,EAAkBC,YAA6B,CAC1DC,SAAU,SAACC,GAAD,OAAaA,EAAQC,MAG3BC,EAAgBC,YAAY,CAChCC,KAAM,UACNC,aAAcR,EAAgBS,kBAC9BC,SAAU,CACRC,iBAAkB,SAACC,EAAOC,GACxBb,EAAgBc,OAAOF,EAAOC,EAAOE,UAEvCC,oBAAqB,SAACJ,EAAOC,GAC3Bb,EAAgBiB,UAAUL,EAAOC,EAAOE,UAE1CG,mBAAoB,SAACN,EAAOC,GAC1Bb,EAAgBmB,UAAUP,EAAO,CAC/BR,GAAIS,EAAOE,QAAQX,GACnBgB,QAAS,CACPC,WAAYR,EAAOE,QAAQK,e,EAQnCf,EAAciB,QADDX,E,EAAAA,iBAAkBK,E,EAAAA,oBAAqBE,E,EAAAA,mBAGvCb,MAAf,S,gCChCA,gFAIMkB,EAJN,MAI0BvB,EAAgBwB,cACxC,SAACZ,GAAD,OAAsBA,EAAMa,YAKjBC,GAFsBH,EAAkBI,WAEdC,YACrCL,EAAkBM,WAClB,SAACJ,GAAD,OAAcA,EAASK,MAAK,SAACC,GAAD,OAAwB,IAAjBA,EAAEV,kBAG1BW,EAAsBJ,YACjCL,EAAkBM,WAClB,SAACJ,GAAD,OAAcA,M,oKCFDQ,EAbYC,IAAOC,IAAV,+L,wBCAXC,EAAoBF,IAAOG,GAAV,ioB,+BCExBC,EAAcJ,YAAOK,IAAPL,CAAH,0LAYXM,EAAWN,YAAO,MAAPA,CAAH,wMAWRO,EAAQ,CACZC,MAAO,IAEPC,gBAAiB,QACjBC,OAAQ,iBACRC,EAAG,EACHC,GAAI,EACJC,GAAI,GAWS,SAASC,EAAUC,GAChC,OACE,cAACX,EAAD,CACEY,KAAMD,EAAME,UACZC,QAASH,EAAMG,QACfC,kBAAgB,oBAChBC,mBAAiB,0BACjBC,kBAAmBf,EALrB,SAOE,eAACgB,EAAA,EAAD,CAAKC,GAAIhB,EAAT,UACE,oBAAIrC,GAAG,uBAAP,SAA+B6C,EAAMS,QACrC,mBAAGtD,GAAG,6BAAN,SAAoC6C,EAAMU,OAC1C,wBAAQC,QAASX,EAAMY,UAAvB,qBACA,wBAAQD,QAASX,EAAMG,QAAvB,wBC1CO,SAASU,EAAT,GAMJ,IALT1D,EAKQ,EALRA,GACA2D,EAIQ,EAJRA,OACAC,EAGQ,EAHRA,YACAC,EAEQ,EAFRA,mBACAC,EACQ,EADRA,aAEMC,EAAWC,cADT,EAE0BC,oBAAS,GAFnC,mBAEDlB,EAFC,KAEUmB,EAFV,KAYR,OACE,eAAClC,EAAD,CAAmBmC,UAAU,cAA7B,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKC,IAAKT,EAAQU,IAAI,YACtB,sBAAMF,UAAU,cAAhB,SAA+BP,IAC/B,uBACA,mBAAGO,UAAU,qBAAb,SAAmCN,IACnC,sBAAMM,UAAU,eAAhB,SAAgCL,OAElC,sBAAKK,UAAW,eAAhB,UACE,cAAC,IAAD,CACEG,GAAE,oBAAetE,GACjBwD,QAAS,kBAAMO,EAASjD,6BAAmB,CAAEd,KAAIgB,SAAS,MAF5D,6BAOA,wBAAQwC,QAAS,kBAAMU,GAAa,IAApC,uBAEF,cAACtB,EAAD,CACEW,KAAK,cACLD,MAAM,cACNP,UAAWA,EACXC,QA/BiB,WACrBkB,GAAa,IA+BTT,UA7BmB,WACvBS,GAAa,GACbH,EAASnD,8BAAoBZ,UC7B1B,I,EAAMuE,EAAqBzC,IAAO0C,GAAV,yECEhB,SAASC,EAAa5B,GACnC,OACE,cAAC0B,EAAD,UACG1B,EAAM6B,IAAIC,KAAI,SAACC,GAAD,OACb,cAAClB,EAAD,CACE1D,GAAI4E,EAAK5E,GACT2D,OAAQiB,EAAKC,SACbjB,YAAagB,EAAKzE,KAClB0D,mBAAkB,uBAAkBe,EAAKE,KAAKxC,MAA5B,oBAA6CsC,EAAKE,KAAKC,QACzEjB,aAAY,iBAAYc,EAAKI,cCLvC,I,EAAMC,EAAiBnD,IAAOC,IAAV,kFAML,SAASmD,IACtB,IAAM7D,EAAW8D,YAAYvD,uBADI,EAELqC,mBAAS,GAFJ,mBAE1BmB,EAF0B,KAElBC,EAFkB,KAG3BtB,EAAWC,cACjB,OACE,eAACiB,EAAD,WACE,+CACA,sBAAKd,UAAU,gBAAf,UACE,cAACM,EAAD,CAAcC,IAAKrD,IACnB,wBACE8C,UAAW,aACXX,QAAS,kBACP8B,MAAM,qCAAD,OAAsCF,IACxCG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACLJ,GAAU,SAACK,GAAD,OAAUA,EAAO,KAC3B3B,EACExD,2BAAiB,CACfP,GAAIyF,EAAKzF,GACTiB,YAAY,EACZ4D,SAAUY,EAAKE,MACfxF,KAAMsF,EAAKnC,MACX0B,MAAO,EAAII,EACXN,KAAM,CACJxC,MAAO,EAAI8C,EACXL,OAAQ,EAAIK,GAEdQ,OAAQ,cAlBpB,+BChBR,IAAMC,EAAoB/D,IAAOC,IAAV,4GASR,SAAS+D,IACtB,IAAMC,EAAiBC,cACjBC,EAAeF,EAAeG,QAAO,SAACC,GACZ,QAA1BJ,EAAetF,QACjBsD,EACEjD,6BAAmB,CACjBd,IAAmB,OAAfoG,QAAe,IAAfA,OAAA,EAAAA,EAAiBpG,IAAKoG,EAAgBpG,GAAK,EAC/CgB,SAAS,QAKjBqF,qBAAU,WACR,OAAOJ,OAET,IAAMlC,EAAWC,cACXoC,EAAkBjB,YAAY7D,2BACpC,OACE,eAACuE,EAAD,WACE,cAAC,IAAD,CACEvB,GAAG,IACHd,QAAS,kBACPO,EACEjD,6BAAmB,CACjBd,IAAmB,OAAfoG,QAAe,IAAfA,OAAA,EAAAA,EAAiBpG,IAAKoG,EAAgBpG,GAAK,EAC/CgB,SAAS,MANjB,kBAaA,8CACA,sBAAMmD,UAAW,cAAjB,gBAAiCiC,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAiBjG,OAClD,uBACA,qBAAKiE,IAAG,OAAEgC,QAAF,IAAEA,OAAF,EAAEA,EAAiBvB,SAAUR,IAAI,KACzC,uBACA,8DACW+B,QADX,IACWA,OADX,EACWA,EAAiBpB,MAD5B,0CAEkBoB,QAFlB,IAEkBA,OAFlB,EAEkBA,EAAiBtB,KAAKxC,MAFxC,2BAEyD8D,QAFzD,IAEyDA,OAFzD,EAEyDA,EAAiBtB,KAAKC,OAF/E,oCAGYqB,QAHZ,IAGYA,OAHZ,EAGYA,EAAiBR,UAC7B,0BCpCSU,MAff,WACE,OACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvB,IACjC,cAAC,IAAD,CAAOsB,KAAK,uBAAZ,SACE,cAACV,EAAD,c,gBCRCY,EAAkB7G,YAA6B,CAC1DC,SAAU,SAAC6G,GAAD,OAAaA,EAAQ3G,MAG3B4G,EAAgB1G,YAAY,CAChCC,KAAM,WACNC,aAAcsG,EAAgBrG,kBAC9BC,SAAU,CACRuG,iBAAkB,SAACrG,EAAOC,GACxBiG,EAAgBhG,OAAOF,EAAOC,EAAOE,UAEvCmG,oBAAqB,SAACtG,EAAOC,GAC3BiG,EAAgB7F,UAAUL,EAAOC,EAAOE,UAE1CoG,kBAAmB,SAACvG,EAAOC,GACzBiG,EAAgB3F,UAAUP,EAAO,CAC/BR,GAAIS,EAAOE,QAAQX,GACnBgB,QAAS,CACPgG,YAAavG,EAAOE,QAAQ4C,Y,EAOmBqD,EAAc1F,QAExD0F,G,EAFAC,iB,EAAkBC,oBAElBF,EAAf,S,QC5BMK,EAAcC,YAAgB,CAClCC,SAAUC,EACV/F,SAAUgG,MAGCC,EAAQC,YAAe,CAClCC,QAASP,ICESQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJW,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAC+C,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7a4ac5f8.chunk.js","sourcesContent":["export * from \"./products/selectors\";\r\nexport * from \"./products/types\";\r\nexport * from \"./products/slice\";\r\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { Product, ChangesPayload } from \"./types\";\r\n\r\nexport const productsAdapter = createEntityAdapter<Product>({\r\n  selectId: (product) => product.id,\r\n});\r\n\r\nconst productsSlice = createSlice({\r\n  name: \"counter\",\r\n  initialState: productsAdapter.getInitialState(),\r\n  reducers: {\r\n    addProductAction: (state, action: PayloadAction<Product>) => {\r\n      productsAdapter.addOne(state, action.payload);\r\n    },\r\n    deleteProductAction: (state, action: PayloadAction<number>) => {\r\n      productsAdapter.removeOne(state, action.payload);\r\n    },\r\n    setSelectedProduct: (state, action: PayloadAction<ChangesPayload>) => {\r\n      productsAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          isSelected: action.payload.changes,\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductAction, deleteProductAction, setSelectedProduct } =\r\n  productsSlice.actions;\r\n\r\nexport default productsSlice.reducer;\r\n","import { createSelector } from \"reselect\";\r\nimport { productsAdapter } from \"./slice\";\r\nimport type { RootState } from \"../store\";\r\n\r\nconst productsSelectors = productsAdapter.getSelectors(\r\n  (state: RootState) => state.products,\r\n);\r\n\r\nexport const productByIdSelector = productsSelectors.selectById;\r\n\r\nexport const selectedProductSelector = createSelector(\r\n  productsSelectors.selectAll,\r\n  (products) => products.find((e) => e.isSelected === true),\r\n);\r\n\r\nexport const allProductsSelector = createSelector(\r\n  productsSelectors.selectAll,\r\n  (products) => products,\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nconst StyledAppContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 720px;\r\n  margin: 0 auto;\r\n  button {\r\n    padding: 1em;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default StyledAppContainer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledProductItem = styled.li`\r\n  margin-top: 25px;\r\n  background-color: white;\r\n  border-radius: 3px;\r\n  padding: 1em;\r\n  box-shadow: 1px 1px 8px 1px rgba(0, 0, 0, 0.25);\r\n  span.productName {\r\n    font-weight: bold;\r\n  }\r\n  img {\r\n    float: left;\r\n    margin-right: 16px;\r\n    width: 150px;\r\n  }\r\n  &:last-child {\r\n    margin-bottom: 25px;\r\n  }\r\n  a {\r\n    color: black;\r\n    text-decoration: none;\r\n    border: 1px solid grey;\r\n    margin-right: 16px;\r\n    padding: 0.7em;\r\n    border-radius: 3px;\r\n    &:hover {\r\n      background-color: grey;\r\n      color: white;\r\n    }\r\n  }\r\n  button {\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { styled, Box } from \"@mui/system\";\r\nimport ModalUnstyled from \"@mui/core/ModalUnstyled\";\r\n\r\nconst StyledModal = styled(ModalUnstyled)`\r\n  position: fixed;\r\n  z-index: 1300;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Backdrop = styled(\"div\")`\r\n  z-index: -1;\r\n  position: fixed;\r\n  right: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  -webkit-tap-highlight-color: transparent;\r\n`;\r\n\r\nconst style = {\r\n  width: 400,\r\n  // bgcolor: \"background.paper\",\r\n  backgroundColor: \"white\",\r\n  border: \"2px solid #000\",\r\n  p: 2,\r\n  px: 4,\r\n  pb: 3,\r\n};\r\n\r\ninterface Props {\r\n  title: string;\r\n  text: string;\r\n  openModal: boolean;\r\n  onClose: () => void;\r\n  onConfirm: () => void;\r\n}\r\n\r\nexport default function ModalItem(props: Props) {\r\n  return (\r\n    <StyledModal\r\n      open={props.openModal}\r\n      onClose={props.onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      BackdropComponent={Backdrop}\r\n    >\r\n      <Box sx={style}>\r\n        <h2 id=\"unstyled-modal-title\">{props.title}</h2>\r\n        <p id=\"unstyled-modal-description\">{props.text}</p>\r\n        <button onClick={props.onConfirm}>Confirm</button>\r\n        <button onClick={props.onClose}>Close</button>\r\n      </Box>\r\n    </StyledModal>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteProductAction } from \"../../../state\";\r\nimport { StyledProductItem } from \"./StyledProductItem\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setSelectedProduct } from \"../../../state\";\r\nimport ModalItem from \"../../components/ModalItem\";\r\n\r\ninterface Props {\r\n  id: number;\r\n  imgUrl: string;\r\n  productName: string;\r\n  productDescription: string;\r\n  productCount: string;\r\n}\r\n\r\nexport default function ProductItem({\r\n  id,\r\n  imgUrl,\r\n  productName,\r\n  productDescription,\r\n  productCount,\r\n}: Props) {\r\n  const dispatch = useDispatch();\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const onCloseHandler = () => {\r\n    setOpenModal(false);\r\n  };\r\n  const onConfirmHandler = () => {\r\n    setOpenModal(false);\r\n    dispatch(deleteProductAction(id));\r\n  };\r\n\r\n  return (\r\n    <StyledProductItem className=\"productItem\">\r\n      <div className=\"product\">\r\n        <img src={imgUrl} alt=\"product\" />\r\n        <span className=\"productName\">{productName}</span>\r\n        <br />\r\n        <p className=\"productDescription\">{productDescription}</p>\r\n        <span className=\"productCount\">{productCount}</span>\r\n      </div>\r\n      <div className={\"buttonsBlock\"}>\r\n        <Link\r\n          to={`/products/${id}`}\r\n          onClick={() => dispatch(setSelectedProduct({ id, changes: true }))}\r\n        >\r\n          Product Details\r\n        </Link>\r\n        {/* <button>Edit</button> */}\r\n        <button onClick={() => setOpenModal(true)}>Delete</button>\r\n      </div>\r\n      <ModalItem\r\n        text=\"lorem ipsum\"\r\n        title=\"loram ipsum\"\r\n        openModal={openModal}\r\n        onClose={onCloseHandler}\r\n        onConfirm={onConfirmHandler}\r\n      />\r\n    </StyledProductItem>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledProductsList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import React from \"react\";\r\nimport ProductItem from \"./components/ProductItem\";\r\nimport { StyledProductsList } from \"./StyledProductsList\";\r\n\r\nexport default function ProductsList(props: any) {\r\n  return (\r\n    <StyledProductsList>\r\n      {props.arr.map((item: any) => (\r\n        <ProductItem\r\n          id={item.id}\r\n          imgUrl={item.imageUrl}\r\n          productName={item.name}\r\n          productDescription={`Size: Width: ${item.size.width} Height: ${item.size.height}`}\r\n          productCount={`Count: ${item.count}`}\r\n        />\r\n      ))}\r\n    </StyledProductsList>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ProductsList from \"../../ProductsList/ProductsList\";\r\nimport { addProductAction } from \"../../../state\";\r\nimport styled from \"styled-components\";\r\nimport { allProductsSelector } from \"../../../state\";\r\nimport ModalItem from \"../../components/ModalItem\";\r\n\r\nconst StyledListPage = styled.div`\r\n  button.addProduct {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nexport default function ListPage() {\r\n  const products = useSelector(allProductsSelector);\r\n  const [number, setNumber] = useState(1);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <StyledListPage>\r\n      <h1>Products List</h1>\r\n      <div className=\"productsBlock\">\r\n        <ProductsList arr={products} />\r\n        <button\r\n          className={\"addProduct\"}\r\n          onClick={() =>\r\n            fetch(`https://fakestoreapi.com/products/${number}`)\r\n              .then((res) => res.json())\r\n              .then((json) => {\r\n                setNumber((prev) => prev + 1);\r\n                dispatch(\r\n                  addProductAction({\r\n                    id: json.id,\r\n                    isSelected: false,\r\n                    imageUrl: json.image,\r\n                    name: json.title,\r\n                    count: 2 + number,\r\n                    size: {\r\n                      width: 3 + number,\r\n                      height: 3 + number,\r\n                    },\r\n                    weight: \"300g\",\r\n                  }),\r\n                );\r\n              })\r\n          }\r\n        >\r\n          New Product\r\n        </button>\r\n      </div>\r\n    </StyledListPage>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectedProductSelector } from \"../../../state\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { setSelectedProduct } from \"../../../state\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledDetailsPage = styled.div`\r\n  img {\r\n    width: 380px;\r\n  }\r\n  .productName {\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nexport default function DetailsPage() {\r\n  const browserHistory = useHistory();\r\n  const backListener = browserHistory.listen((loc) => {\r\n    if (browserHistory.action === \"POP\") {\r\n      dispatch(\r\n        setSelectedProduct({\r\n          id: selectedProduct?.id ? selectedProduct.id : 0,\r\n          changes: false,\r\n        }),\r\n      );\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    return backListener();\r\n  });\r\n  const dispatch = useDispatch();\r\n  const selectedProduct = useSelector(selectedProductSelector);\r\n  return (\r\n    <StyledDetailsPage>\r\n      <Link\r\n        to=\"/\"\r\n        onClick={() =>\r\n          dispatch(\r\n            setSelectedProduct({\r\n              id: selectedProduct?.id ? selectedProduct.id : 0,\r\n              changes: false,\r\n            }),\r\n          )\r\n        }\r\n      >\r\n        Back\r\n      </Link>\r\n      <h1>Details Page</h1>\r\n      <span className={\"productName\"}>{selectedProduct?.name}</span>\r\n      <br />\r\n      <img src={selectedProduct?.imageUrl} alt=\"\" />\r\n      <br />\r\n      <p>{`\r\n        Count: ${selectedProduct?.count}\r\n        Sizes: Width: ${selectedProduct?.size.width} Height: ${selectedProduct?.size.height}\r\n        Weight: ${selectedProduct?.weight}`}</p>\r\n      <br />\r\n    </StyledDetailsPage>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport StyledAppContainer from \"./StyledAppContainer\";\r\nimport ListPage from \"./pages/ListPage/ListPage\";\r\nimport DetailsPage from \"./pages/DetailsPage/DetailsPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <StyledAppContainer>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={ListPage}></Route>\r\n          <Route path=\"/products/:productId\">\r\n            <DetailsPage />\r\n          </Route>\r\n        </Switch>\r\n      </StyledAppContainer>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\r\nimport type { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Comment } from \"./types\";\r\nimport type { CommentChanges } from \"./types\";\r\n\r\nexport const commentsAdapter = createEntityAdapter<Comment>({\r\n  selectId: (comment) => comment.id,\r\n});\r\n\r\nconst commentsSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState: commentsAdapter.getInitialState(),\r\n  reducers: {\r\n    addCommentAction: (state, action: PayloadAction<Comment>) => {\r\n      commentsAdapter.addOne(state, action.payload);\r\n    },\r\n    deleteCommentAction: (state, action: PayloadAction<number>) => {\r\n      commentsAdapter.removeOne(state, action.payload);\r\n    },\r\n    editCommentAction: (state, action: PayloadAction<CommentChanges>) => {\r\n      commentsAdapter.updateOne(state, {\r\n        id: action.payload.id,\r\n        changes: {\r\n          description: action.payload.text,\r\n        },\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addCommentAction, deleteCommentAction } = commentsSlice.actions;\r\n\r\nexport default commentsSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport commentsReducer from \"./comments/slice\";\r\nimport productsReducer from \"./products/slice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  comments: commentsReducer,\r\n  products: productsReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./view/App\";\r\nimport { store } from \"./state/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}